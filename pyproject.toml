[build-system]
requires = [
    "setuptools >= 61.0.0",
    "wheel >= 0.37.1"
]
build-backend = "setuptools.build_meta"


[project]
name = "embedding-service"
version = "v1"
authors = [
    { name = "Seoyeon Park", email = "sally9476@wisenut.co.kr" }
]
maintainers = [
    { name = "Seoyeon Park", email = "sally9476@wisenut.co.kr" }
]
description = "AIP Team Embedding Service"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.9"
keywords = ["python", "fastapi", "embedding"]
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Natural Language :: Korean",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet :: WWW/HTTP",
    "Intended Audience :: Developers"
]
dependencies = [
    "absl-py==2.1.0",
    "annotated-types==0.6.0",
    "anyio==4.3.0",
    "certifi==2024.2.2",
    "charset-normalizer==3.3.2",
    "click==8.1.7",
    "colorama==0.4.6",
    "exceptiongroup==1.2.0",
    "fastapi==0.110.0",
    "filelock==3.13.3",
    "fsspec==2024.3.1",
    "gensim==4.3.2",
    "huggingface-hub==0.22.1",
    "h11==0.14.0",
    "idna==3.6",
    "importlib_metadata==7.1.0",
    "iniconfig==2.0.0",
    "Jinja2==3.1.3",
    "joblib==1.3.2",
    "loguru==0.7.2",
    "MarkupSafe==2.1.5",
    "mpmath==1.3.0",
    "networkx==3.2.1",
    "numpy==1.26.4",
    "packaging==24.0",
    "pillow==10.2.0",
    "pydantic==2.6.4",
    "pydantic_core==2.16.3",
    "pydantic-settings==2.2.1",
    "python-dotenv==1.0.1",
    "PyYAML==6.0.1",
    "regex==2023.12.25",
    "requests==2.31.0",
    "safetensors==0.4.2",
    "scikit-learn==1.4.1.post1",
    "scipy==1.12.0",
    "sentence-transformers==2.6.1",
    "sniffio==1.3.1",
    "starlette==0.36.3",
    "sympy==1.12",
    "tensorboard==2.16.2",
    "tensorboard-data-server==0.7.2",
    "tensorflow-cpu==2.16.1",
    "tensorflow-hub==0.16.1",
    "tensorflow-io-gcs-filesystem==0.31.0",
    "termcolor==2.4.0",
    "tf_keras==2.16.0",
    "threadpoolctl==3.4.0",
    "tokenizers==0.15.2",
    "torch==2.2.2+cpu",
    "tqdm==4.66.2",
    "transformers==4.39.2",
    "typing_extensions==4.10.0",
    "urllib3==2.2.1",
    "uvicorn==0.28.1",
    "Werkzeug==3.0.2",
    "win32-setctime==1.1.0",
    "zipp==3.18.1"
]

[project.optional-dependencies]
test = [
    "pytest >= 8.3.2",
    "httpx >= 0.27.0"
]
lint = [
    "ruff==0.8.1",
    "pyright==1.1.389"
]

[tool.setuptools]
py-modules = ["app"]


[tool.ruff]
line-length = 125
exclude = [
    '.git',
    '__pycache__',
    '.ruff_cache',
    'docs',
    'venv',
    'tests',
    'build',
    'dist',
    './app/__init__.py',
    'gunicorn.conf.py'
]
target-version = "py39"
[tool.ruff.lint]
select = ["D"]
ignore = ['W', "D100", "D104", "D414", "D415", "D417"]
[tool.ruff.lint.pydocstyle]
convention = "google"
[tool.ruff.lint.extend-per-file-ignores]
# app/src 디렉토리에서만 `D` 규칙 적용, <https://docs.astral.sh/ruff/rules/#pydocstyle-d>
"app/api/*" = ["D"]
"app/exceptions/*" = ["D"]
"app/schemas/*" = ["D"]
"app/utils/*" = ["D"]
"app/version.py"= ["D"]
"app/main.py"= ["D"]
"app/log.py"= ["D"]
"app/handlers.py"= ["D"]
"app/dependencies.py"= ["D"]
"app/constants.py"= ["D"]
"app/config.py"= ["D"]
[tool.ruff.lint.mccabe]
max-complexity = 10


[tool.pyright]
pythonVersion = "3.9"
defineConstant = { DEBUG = true }
reportMissingImports = false
reportMissingTypeStubs = false
reportArgumentType = false
typeCheckingMode = "basic"
include = ["app"]
exclude = [
    '.git',
    '__pycache__',
    '.ruff_cache',
    '.pytest_cache',
    'docs',
    'venv',
    'tests',
    'build',
    'dist',
    'pypi',
    'logs',
    'gunicorn.conf.py'
]

[tool.coverage.run]
source = ["app"]
omit = [
    "app/*.py",
     "*/__init__.py",
    "app/api/examples/*.py",
    "app/exceptions/*.py",
]